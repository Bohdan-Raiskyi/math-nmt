generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid()) @db.Uuid
  firstName String?
  nickname  String
  email     String  @unique
  password  String

  UserTask UserTask[]
  Plan     Plan[]
  PlanTask PlanTask[]
}

model Topic {
  id       String @id @default(uuid()) @db.Uuid
  parentID String @default("a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11") @db.Uuid
  title    String

  Task   Task[]
  Plan   Plan[]
  Theory Theory[]
}

model Theory {
  topicID String @db.Uuid
  content String @db.Text

  topic Topic @relation(fields: [topicID], references: [id])

  @@id([topicID])
}

model Task {
  id          String @id @default(uuid()) @db.Uuid
  topicID     String @db.Uuid
  description String
  problem     String
  solution    String

  topic Topic @relation(fields: [topicID], references: [id])

  UserTask UserTask[] @relation(fields: [], references: [])
  PlanTask PlanTask[]
}

model UserTask {
  userID    String    @db.Uuid
  taskID    String    @db.Uuid
  passed_on DateTime?

  user User @relation(fields: [userID], references: [id])
  task Task @relation(fields: [taskID], references: [id])

  @@id([userID, taskID])
}

model Plan {
  id        String    @id @default(uuid()) @db.Uuid
  userID    String    @db.Uuid
  hours     Int?
  startDate DateTime  @default(now())
  endDate   DateTime?

  User User @relation(fields: [userID], references: [id])

  Topic    Topic?     @relation(fields: [topicId], references: [id])
  topicId  String?    @db.Uuid
  PlanTask PlanTask[]
}

model PlanTask {
  planID String @db.Uuid
  taskID String @db.Uuid

  plan   Plan    @relation(fields: [planID], references: [id])
  task   Task    @relation(fields: [taskID], references: [id])
  User   User?   @relation(fields: [userId], references: [id])
  userId String? @db.Uuid

  @@id([planID, taskID])
}
